@using battle_mate.Pages.BattleResult
@inherits LayoutComponentBase

<div class="page">
  <div class="main">
    <div class="row justify-content-between px-4">

      <div class="col px-0">
        <button type="button" class="btn btn-outline-secondary my-2" data-bs-toggle="modal" data-bs-target="#infoModal">
          <span class="oi oi-info" aria-hidden="true"></span>
        </button>
      </div>

      @if (_isOnCombat)
      {
        <div class="col px-0">
          <button class="btn btn-outline-primary my-2 float-end" @onclick="GoToRollDice">
            <span class="oi oi-arrow-right"></span>
          </button>
        </div>
      }
      else
      {
        <div class="col px-0">
          <button class="btn btn-outline-primary my-2 float-end" @onclick="GoToCombat">
            <span class="oi oi-arrow-left"></span>
          </button>
        </div>
      }

      <div class="modal fade" id="infoModal" tabindex="-1" aria-labelledby="infoModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-dialog-scrollable">
          <div class="modal-content">
            <div class="modal-body">
              <div class="card" xmlns="http://www.w3.org/1999/html">
                <h3 class="card-header mb-3">Version: @_windowVersion</h3>
                <div class="card-body">
                  <h3>Legal Disclosure</h3>
                  <h4 class="mt-3">Contact Information</h4>
                  <address>
                    Simon Heiss<br>
                    Birkenstraße 4<br>
                    76327 Pfinztal<br>
                  </address>
                  Telephone: +4915165124222<br>
                  E-Mail: simonheiss87@gmail.com<br>
                  Internet address: https://battle-mate.com/<br>

                  <h4 class="mt-3">Disclaimer</h4>
                  <h5 class="mt-2">Accountability for content</h5>

                  The contents of our pages have been created with the utmost care. However, we cannot guarantee the contents' accuracy, completeness or topicality. According to statutory provisions, we are furthermore responsible for our own content on these web pages. In this matter, please note that we are not obliged to monitor the transmitted or saved information of third parties, or investigate circumstances pointing to illegal activity. Our obligations to remove or block the use of information under generally applicable laws remain unaffected by this as per §§ 8 to 10 of the Telemedia Act (TMG).

                  <h5 class="mt-2">Accountability for links</h5>
                  Responsibility for the content of external links (to web pages of third parties) lies solely with the operators of the linked pages. No violations were evident to us at the time of linking. Should any legal infringement become known to us, we will remove the respective link immediately.

                  <h5 class="mt-2">Copyright</h5>
                  Our web pages and their contents are subject to German copyright law. Unless expressly permitted by law, every form of utilizing, reproducing or processing works subject to copyright protection on our web pages requires the prior consent of the respective owner of the rights. Individual reproductions of a work are only allowed for private use. The materials from these pages are copyrighted and any unauthorized use may violate copyright laws.
                </div>
              </div>
            </div>
            <div class="modal-footer">
              <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
            </div>
          </div>
        </div>
      </div>


    </div>

    <div class="content px-4">
      @Body
    </div>
  </div>
</div>

@inject CombatResultState _state
@inject CombatOptionsRepository _repository
@inject IJSRuntime _javascript
@inject NavigationManager _navigationManager

@code
{
  private int _windowVersion;
  private bool _isOnCombat = true;

  protected override async Task OnAfterRenderAsync(bool firstRender)
  {
    if (firstRender)
    {
      var options = await _repository.LoadOptions();
      _state.InitOptions(options);
      _windowVersion = await _javascript.InvokeAsync<int>("buildVersion");
      StateHasChanged();
    }
    await base.OnAfterRenderAsync(firstRender);
  }

  private void GoToCombat()
  {
    _navigationManager.NavigateTo("/");
    _isOnCombat = true;
  }
  
  private void GoToRollDice()
  {
    _navigationManager.NavigateTo("/dice");
    _isOnCombat = false;
  }
}