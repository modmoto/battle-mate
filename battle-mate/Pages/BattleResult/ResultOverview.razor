<h2 class="@((Right ? "text-start" : "text-end") + (PointsDifference < 0 ? " red" : " green"))">
  @PointsDifference
</h2>
<div class="@(Right ? "text-start" : "text-end")">
  @AllPoints
</div>
<UpAndDownComp Right="Right" Topic="Wounds" Input="Wounds" InvokeChange="InvokeWounds" ></UpAndDownComp>
@if (HasVsPoints)
{
  <UpAndDownComp Right="Right" Topic="VS wounds" Input="VsWounds" InvokeChange="InvokeVsWounds" ></UpAndDownComp>  
}
<UpAndDownComp Right="Right" Topic="Ranks" Input="Ranks" InvokeChange="InvokeRanks"></UpAndDownComp>
<UpAndDownComp Right="Right" Topic="Banners" Input="Banners" InvokeChange="InvokeBanners"></UpAndDownComp>
<UpAndDownComp Right="Right" Topic="Overkill" Input="Overkill" InvokeChange="InvokeOverkill"></UpAndDownComp>
@if (HasAdditionalPoints)
{
  <UpAndDownComp Right="Right" Topic="Additional" Input="AdditionalPoints" InvokeChange="InvokeAdditionalPoints"></UpAndDownComp>  
}
<CycleChecker @ref="Charges" InvokeChange="InvokeCharging" Values="ChargeValues"></CycleChecker>
<CycleChecker @ref="Flanks" InvokeChange="InvokeFlank" Values="FlankValues"></CycleChecker>
<CycleChecker @ref="Rears" InvokeChange="InvokeRear" Values="RearValues"></CycleChecker>

@code {
  [Parameter]
  public bool Right { get; set; }
  [Parameter]
  public int PointsDifference { get; set; }
  [Parameter]
  public int AllPoints { get; set; }
  [Parameter]
  public int Wounds { get; set; }
  [Parameter]
  public int VsWounds { get; set; }
  [Parameter]
  public int Ranks { get; set; }
  [Parameter]
  public int Banners { get; set; }
  [Parameter]
  public int Overkill { get; set; }
  [Parameter]
  public int AdditionalPoints { get; set; }
  [Parameter]
  public bool HasAdditionalPoints { get; set; }
  [Parameter]
  public bool HasVsPoints { get; set; }
  
  [Parameter]
  public EventCallback<int> InvokeWounds { get; set; }
  [Parameter]
  public EventCallback<int> InvokeVsWounds { get; set; }
  [Parameter]
  public EventCallback<int> InvokeRanks { get; set; }
  [Parameter]
  public EventCallback<int> InvokeBanners { get; set; }
  [Parameter]
  public EventCallback<int> InvokeOverkill { get; set; }
  [Parameter]
  public EventCallback<int> InvokeAdditionalPoints { get; set; }
  
  [Parameter]
  public EventCallback<PointStrings> InvokeRear { get; set; }
  [Parameter]
  public EventCallback<PointStrings> InvokeFlank { get; set; }
  [Parameter]
  public EventCallback<PointStrings> InvokeCharging { get; set; }

  public List<PointStrings> ChargeValues => new() {new PointStrings(0, "not charging"), new PointStrings(1, "Charge +1")};
  public List<PointStrings> FlankValues => new() {new PointStrings(0, "not flanking"), new PointStrings(1, "Flank +1"), new PointStrings(2, "Flank +2")};
  public List<PointStrings> RearValues => new() {new PointStrings(0, "no rear"), new PointStrings(2, "Rear +2"), new PointStrings(3, "Rear +3")};

  public void Reset()
  {
    Rears.Reset();
    Flanks.Reset();
    Charges.Reset();
  }

  public CycleChecker Rears { get; set; }

  public CycleChecker Flanks { get; set; }

  public CycleChecker Charges { get; set; }

}