@using battle_mate.Pages.BattleResult

@if (Prob.BattleFocusChecked && (Prob.PoisonChecked || Prob.Poison5Checked))
{
  <span>@Prob.ExpectedHits.SuccessResult.ToString("F2") hits @Prob.ExpectedHits.Additional.ToString("F2") BF, @Prob.ExpectedWounds.Additional.ToString("F2") P</span>
}
else if (Prob.PoisonChecked || Prob.Poison5Checked)
{
  <span>@((Prob.ExpectedHits.SuccessResult - Prob.ExpectedWounds.Additional).ToString("F2")) hits, @Prob.ExpectedWounds.Additional.ToString("F2") P</span>
}
else if (Prob.BattleFocusChecked)
{
  <span>@Prob.ExpectedHits.SuccessResult.ToString("F2") hits, @Prob.ExpectedHits.Additional.ToString("F2") BF</span>
}
else
{
  <span>@Prob.ExpectedHits.SuccessResult.ToString("F2") hits</span>
}

<RerollResult Reroll="Prob.RerollsHit" RerollCount="Prob.ExpectedHits.RerollCount"></RerollResult>

@code {
    [Parameter]
    public ProbabilityChain Prob { get; set; }
}